{"version":3,"sources":["cypto/events.cljs"],"mappings":";AAQA,yDAAA,zDAACA,sJAEA,EAAA,AAAAC,iDAAA,WAAYO,EAAEA;AAAd,AAAA,IAAAN,6BAAA;AAAA,AAAA,IAAA,AAAA,AAAAC,gDAAA,AAAA;;AAAA,IAAAC,wBACWK;AADX,AAAA,AAAAJ,iDAAA,2CAAA,8DAAA,EAAA,qEAAA,IAAA,yDAAAD,sBAAA,sDAAA,AAAA,yEAAA,qEAAA;;AAAAA;gBAAA,IAAAE,IAAAC;AAAA,AAAA,MAAAD;IAAA,WAAYE,EAAEA;AAAd,AACWC;;AAGZ,yDAAA,zDAACT,mJAEA,cAAAU,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASH;YAAT,AAAAI,4CAAAD,WAAA,IAAA,nEAAWG;AAAX,AACE,wDAAA,jDAACC,8CAAMF,wDAASC;;AAEnB,uBAAA,vBAACE,2EAEA,WAAKC,KAAKC;AAAV,AACE,0DAAA,nDAACH,8CAAME,yDAAU,KAAAE;;AAGpB,yDAAA,zDAACC,sIAEA,WAAAC,SAAkBb;AAAlB,AAAA,IAAAc,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaT;AAAb,AAAA,kDAAA,kKAAA,iEAAA,2CAAA,uDAAA,mDAAA,mDAAA,8CAAA,2DAAA,OAAA,iOAAA,iEAAA,mFAAA,sGAAA,gEAAA,mFAAA,zlCACS,iDAAA,2DAAA,5GAACE,8CAAMF,wgBAIiB,+BAAA,2CAAA,8DAAA,xIAACY;;AAKnC,yDAAA,zDAACzB,uJAGA,cAAA0B,HACGb;AADH,AAAA,IAAAc,aAAAD;QAAA,AAAAd,4CAAAe,WAAA,IAAA,/DACOnB;eADP,AAAAI,4CAAAe,WAAA,IAAA,tEACSC;AADT,AAGE,wDAAA,jDAACb,8CAAMF,wDAAS,AAACgB,mDAAQD","names":["re_frame.core.reg_event_db","day8.re-frame.tracing/is-trace-enabled?","+debux-dbg-opts+","day8.re-frame.debux.common.util/send-form!","result__33268__auto__","day8.re-frame.debux.common.util/send-trace!","e","e36934","_","cypto.db/default-db","p__36935","vec__36936","cljs.core.nth","db","value","cljs.core.assoc","re-frame.core/reg-cofx","cofx","_data","js/Date","re_frame.core.reg_event_fx","p__36939","map__36940","cljs.core/--destructure-map","cljs.core.get","ajax.core/json-response-format","p__36941","vec__36942","response","cljs.core.js__GT_clj"],"sourcesContent":["(ns cypto.events\n  (:require\n   [re-frame.core :as re-frame]\n   [cypto.db :as db]\n   [ajax.core :as ajax]\n   [day8.re-frame.http-fx]\n   [day8.re-frame.tracing :refer-macros [fn-traced]]))\n\n(re-frame/reg-event-db\n ::initialize-db\n (fn-traced [_ _]\n            db/default-db))\n\n\n(re-frame/reg-event-db\n ::update-name\n (fn [db [_ value]]\n   (assoc db :name value)))\n\n(re-frame/reg-cofx\n :now\n (fn [cofx _data]\n   (assoc cofx :now (js/Date.))))\n\n\n(re-frame/reg-event-fx\n ::fetch\n (fn [{:keys [db]} _]\n   {:db   (assoc db :loading true)\n    :http-xhrio {:method          :get\n                 :uri             \"https://api.binance.com/api/v3/ticker/price\"\n                 :timeout         8000\n                 :response-format (ajax/json-response-format {:keywords? true})\n                 :on-success      [::fetch-success]\n                 :on-failure      [:bad-http-result]}}))\n\n\n(re-frame/reg-event-db\n ::fetch-success\n;;  [(re-frame/inject-cofx :now)]\n (fn\n   [db [_ response]]\n  ;;  (print :now)\n   (assoc db :data (js->clj response))))\n\n"]}